{
  "permissions": {
    "allow": [
      "mcp__sequential-thinking__sequentialthinking",
      "mcp__deepwiki__read_wiki_structure",
      "mcp__deepwiki__read_wiki_contents",
      "mcp__deepwiki__ask_question",
      "mcp__context7__resolve_library_id",
      "mcp__context7__get_library_docs",
      "mcp__puppeteer__navigate",
      "mcp__puppeteer__screenshot",
      "Bash(find . -name:*)",
      "Bash(find . -type:*)",
      "Bash(fd:*)",
      "Bash(ls:*)",
      "Bash(cat:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(wc:*)",
      "Bash(file:*)",
      "Bash(stat:*)",
      "Bash(du -h:*)",
      "Bash(tree:*)",
      "Bash(grep -r:*)",
      "Bash(rg:*)",
      "Bash(ag:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(sort:*)",
      "Bash(uniq:*)",
      "Bash(cut:*)",
      "Bash(tr:*)",
      "Bash(jq:*)",
      "Bash(yq:*)",
      "Bash(git status:*)",
      "Bash(git log:*)",
      "Bash(git show:*)",
      "Bash(git diff:*)",
      "Bash(git branch:*)",
      "Bash(git remote -v:*)",
      "Bash(git config --get:*)",
      "Bash(git blame:*)",
      "Bash(git add .:*)",
      "Bash(git add -A:*)",
      "Bash(git commit -m:*)",
      "Bash(git push origin:*)",
      "Bash(git checkout -b:*)",
      "Bash(git switch:*)",
      "Bash(git stash:*)",
      "Bash(git stash pop:*)",
      "Bash(git pull:*)",
      "Bash(git fetch:*)",
      "Bash(gh repo view:*)",
      "Bash(gh issue list:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr list:*)",
      "Bash(gh pr view:*)",
      "Bash(gh workflow list:*)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh release list:*)",
      "Bash(gh release view:*)",
      "Bash(cargo build:*)",
      "Bash(cargo run:*)",
      "Bash(cargo test:*)",
      "Bash(cargo check:*)",
      "Bash(cargo clippy:*)",
      "Bash(cargo fmt:*)",
      "Bash(cargo doc:*)",
      "Bash(cargo search:*)",
      "Bash(cargo update:*)",
      "Bash(cargo clean:*)",
      "Bash(cargo bench:*)",
      "Bash(cargo tree:*)",
      "Bash(cargo expand:*)",
      "Bash(rustc --version:*)",
      "Bash(rustup show:*)",
      "Bash(rustfmt --version:*)",
      "Bash(python -m:*)",
      "Bash(python3 -m:*)",
      "Bash(pip list:*)",
      "Bash(pip show:*)",
      "Bash(pip freeze:*)",
      "Bash(pipenv --version:*)",
      "Bash(poetry --version:*)",
      "Bash(poetry show:*)",
      "Bash(pytest:*)",
      "Bash(black --check:*)",
      "Bash(black:*)",
      "Bash(flake8:*)",
      "Bash(mypy:*)",
      "Bash(isort --check:*)",
      "Bash(isort:*)",
      "Bash(node --version:*)",
      "Bash(npm --version:*)",
      "Bash(npm list:*)",
      "Bash(npm run:*)",
      "Bash(pnpm --version:*)",
      "Bash(pnpm run:*)",
      "Bash(pnpm test:*)",
      "Bash(pnpm tsc:*)",
      "Bash(yarn --version:*)",
      "Bash(npx --version:*)",
      "Bash(eslint:*)",
      "Bash(prettier --check:*)",
      "Bash(prettier --write:*)",
      "Bash(jest:*)",
      "Bash(tsc --noEmit:*)",
      "Bash(nix --version:*)",
      "Bash(nix flake show:*)",
      "Bash(nix flake check:*)",
      "Bash(nix flake update:*)",
      "Bash(nix develop:*)",
      "Bash(nix build:*)",
      "Bash(nix run:*)",
      "Bash(nix shell:*)",
      "Bash(nix search:*)",
      "Bash(nix-shell:*)",
      "Bash(make:*)",
      "Bash(cmake --version:*)",
      "Bash(ninja --version:*)",
      "Bash(docker --version:*)",
      "Bash(docker ps:*)",
      "Bash(docker images:*)",
      "Bash(docker logs:*)",
      "Bash(docker-compose --version:*)",
      "Bash(ps aux:*)",
      "Bash(free -h:*)",
      "Bash(df -h:*)",
      "Bash(uptime:*)",
      "Bash(uname -a:*)",
      "Bash(whoami:*)",
      "Bash(id:*)",
      "Bash(pwd:*)",
      "Bash(which:*)",
      "Bash(whereis:*)",
      "Bash(env:*)",
      "Bash(printenv:*)",
      "Bash(tar -tf:*)",
      "Bash(tar -xf:*)",
      "Bash(unzip -l:*)",
      "Bash(unzip:*)",
      "Bash(ping -c 3:*)",
      "Bash(dig:*)",
      "Bash(nslookup:*)",
      "Bash(man:*)",
      "Bash(--help:*)",
      "Bash(-h:*)",
      "Bash(shellcheck:*)",
      "Bash(shfmt:*)",
      "Bash(xargs:*)",
      "Bash(watch:*)",
      "Bash(cargo audit:*)",
      "Bash(npm audit:*)",
      "WebFetchTool(domain:docs.anthropic.com)",
      "WebFetchTool(domain:developer.fashionunited.com)"
    ],
    "deny": [
      "Bash(sudo:*)",
      "Bash(su:*)",
      "Bash(chmod 777:*)",
      "Bash(chown:*)",
      "Bash(mount:*)",
      "Bash(umount:*)",
      "Bash(rm -rf:*)",
      "Bash(rm -f /*:*)",
      "Bash(dd:*)",
      "Bash(mkfs:*)",
      "Bash(fdisk:*)",
      "Bash(parted:*)",
      "Bash(nmap:*)",
      "Bash(nc -l:*)",
      "Bash(netcat -l:*)",
      "Bash(kill -9:*)",
      "Bash(killall:*)",
      "Bash(pkill:*)",
      "Bash(systemctl:*)",
      "Bash(service:*)",
      "Bash(launchctl:*)",
      "Bash(apt install:*)",
      "Bash(apt remove:*)",
      "Bash(yum install:*)",
      "Bash(dnf install:*)",
      "Bash(brew install:*)",
      "Bash(pip install:*)",
      "Bash(npm install -g:*)",
      "Bash(git reset --hard HEAD~:*)",
      "Bash(git push --force:*)",
      "Bash(git push -f:*)",
      "Bash(docker run --privileged:*)",
      "Bash(docker exec -it:*)",
      "Bash(curl -s | sh:*)",
      "Bash(wget -O- | sh:*)",
      "Bash(history -c:*)",
      "Bash(unset HISTFILE:*)"
    ]
  },
  "fileAccess": {
    "read": ["~/.gitconfig", "~/.ssh/config"],
    "edit": [
      "**/*.rs",
      "**/*.py",
      "**/*.js",
      "**/*.ts",
      "**/*.json",
      "**/*.toml",
      "**/*.yaml",
      "**/*.yml",
      "**/*.md",
      "**/*.nix",
      "flake.lock",
      "**/Cargo.lock",
      "**/requirements.txt"
    ],
    "deny": [
      "**/.env",
      "**/.env.*",
      "**/id_rsa",
      "**/id_ed25519",
      "**/*.pem",
      "**/*.key",
      "/etc/**",
      "/var/**",
      "/usr/**"
    ]
  },
  "additionalDirectories": ["~/projects", "~/code", "~/dev", "~/git"],
  "defaultMode": "prompt",
  "env": {
    "CLAUDE_CODE_ENABLE_TELEMETRY": "0",
    "RUST_BACKTRACE": "1",
    "CARGO_TERM_COLOR": "always"
  }
}
